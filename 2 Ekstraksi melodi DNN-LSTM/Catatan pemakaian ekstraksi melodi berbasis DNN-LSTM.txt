Link github : https://github.com/beantowel/Lab_MelExt

Download pretrained pkl di https://drive.google.com/open?id=1TScpMr2sTsushiqB_3k0ILySLGzJSN0W
put them in the data/ folder.

*Modifikasi*
configs.py line 8 :
os.environ["HOME"] = 'D:/Project/Lab_MelExt'
# MEL_EXT_HOME = os.environ["HOME"] + '/FDU/MIR'
MEL_EXT_HOME = os.environ["HOME"]

predict.py line 49 :
# voice = voiceLogit.argmax(1).byte()  # 0-unvoice 1-voice
voice = voiceLogit.argmax(1).bool()

*Usage command* :
Usage: predict.py [OPTIONS] AUDIOFILE [MELFILE]

Options:
  --model TEXT   pretrained model path
  --cpu BOOLEAN  use when have no cuda support
  --help         Show this message and exit.
  
example: python predict.py <path-to-input-audio-file> <path-of-output-csv-file>
python predict.py D:\Project\Lab_MelExt\dataset\00001.wav D:\Project\Lab_MelExt\data\res.csv

Modifikasi supaya dapat memproses semua file dalam satu folder
file predict.py line 131
def main(audiofile, melfile, model, cpu):
    device = torch.device('cuda') if (not cpu) and (
        torch.cuda.device_count() > 0) else torch.device('cpu')
    model = loadModel(model, device)
    # times, freqs = predict_on_audio(model, audiofile, device)
    # writeMel(melfile, times, freqs)
    # print(f'melody write to {melfile}')

    # extract all audio from a folder
    # usage python predict.py folder-audio folder-mel-output
    list_dir = os.listdir(audiofile)
    for i in range(len(list_dir)):
        print("processing ",i+1,"/",len(list_dir))
        audio = list_dir[i]
        audio_path = os.path.join(audiofile, audio)
        mel_path = os.path.join(melfile, audio.replace('.wav','') + "-DNN_LSTM.csv")
        
        if not os.path.exists(melfile):
            os.mkdir(melfile)
        
        times, freqs = predict_on_audio(model, audio_path, device)
        writeMel(mel_path, times, freqs)
        # print(f'melody write to {melfile}')